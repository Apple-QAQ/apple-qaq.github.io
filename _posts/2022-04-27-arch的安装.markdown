---
layout: post
title: arch的安装
date: 2022-04-27 16:00:00.000000000 +08:00
---

**提示：本教程建议在使用时使用`uefi`引导，本文出现的`<***>`直接替换，不保留`<  >` , `(  )`和`#`为批注，在输入命令的时候不要输进去**

## 1. 软件源

首先，我们需要关闭万恶的`reflector`！（国内特色）

{% highlight bash %}
systemctl stop reflector
{% endhighlight %}

随后用`vim`编辑软件源，把第一行改为 `Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch`

{% highlight bash %}
vim /etc/pacman.d/mirrorlist
#随后进入了vim编辑器，熟悉linux的可以用自己喜欢的编辑器
#按下"i"进入插入并把第一行改成：
Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch
#按下"esc"退出插入模式
#输入":wq!"退出vim:
:wq!
#(请记住这些操作方式)
{% endhighlight %}

如果一定要开`reflector`的话，执行以下命令就可以了

{% highlight bash %}
reflector --country China --age 24 --sort rate --protocol https --save /etc/pacman.d/mirrorlist
{% endhighlight %}

## 2. 分区

使用`cfdisk`，[点击这里查看cfdisk用法](https://www.runoob.com/linux/linux-comm-cfdisk.html)

{% highlight bash %}
cfdisk /dev/sda
{% endhighlight %}

首先先新建一个引导分区（小一点，建议100MiB）

再新建系统根目录（建议把其他所有内存都给系统根目录）

随后格式化分区

{% highlight bash %}
mkfs.fat -F32 <你所分的引导分区>(不一定叫做/efi，类似于/dev/sda1)
mkfs.ext4 <你所分的系统根目录>(不一定是叫做/dev/sda2，类似于/dev/sda2)
{% endhighlight %}

开始挂载分区

{% highlight bash %}
mount <你所分的系统根目录>(不一定叫做/dev/sda2，类似于/dev/sda2) /mnt
mkdir /mnt/efi  #<-这行命令的意思是，在挂载到/mnt上的系统根目录上新建一个/efi的文件夹
mount <你所分的引导分区>(不一定叫做/efi，类似于/dev/sda1) /mnt/efi
{% endhighlight %}

## 3. 联网 

输入`iwctl`进入`iwd`模式，也就是终端最前方有`[iwd] #`字样。

在`iwd`模式下输入`device list`，查询电脑的网卡。记住你的网卡号，下文就用`<网卡号>`替代，一般是`wlan0`或者`wlan1`，若遇到`iwd`找不到网卡的话，请往下面看的说~

在`iwd`模式下输入`station <网卡号> scan`，然后再输入`station <网卡号> get-networks`，显示周围的`wifi`的`ssid`扫描结果。

在`iwd`模式下输入`station <网卡号> connect`，如果是加密的`wifi`，系统会提示输入`wifi`密码，如无意外，就连上网了。

**若遇到`iwd`找不到网卡的话，请`ctrl+c`退出`iwd`，然后输入`rfkill list`

示例输出：

{% highlight bash %}
0: phy0: Wireless LAN
    Soft blocked: yes
    Hard blocked: yes
2: hci0: Bluetooth
    Soft blocked: yes
    Hard blocked: yes
{% endhighlight %}

输入`rfkill unblock all`以解锁，然后就可以重复上面`iwctl`的方法的说~

## 4. 安装arch

安装`archlinux-keyring`来预防安装出现签名问题

{% highlight bash %}
pacman -S archlinux-keyring
{% endhighlight %}

安装基本系统

{% highlight bash %}
pacstrap /mnt base base-devel linux linux-firmware nano
{% endhighlight %}




生成`fstab`

{% highlight bash %}
genfstab -U /mnt > /mnt/etc/fstab
{% endhighlight %}




`arch-chroot`进入安装到本地的系统

{% highlight bash %}
arch-chroot /mnt
{% endhighlight %}




本地化

{% highlight bash %}
vim /etc/locale.gen
{% endhighlight %}



取消这两个之前的注释
{% highlight bash %}
en_US.UTF-8 UTF-8
zh_CN.UTF-8 UTF-8
{% endhighlight %}



重置语言
{% highlight bash %}
locale-gen
{% endhighlight %}



设置时区与utc时间
{% highlight bash %}
timedatectl set-timezone Asia/Shanghai
timedatectl set-ntp true
hwclock --systohc --utc
{% endhighlight %}



新建用户并允许使用`sudo`

{% highlight bash %}
useradd -m -G wheel <你想设置的用户名>
vim /etc/sudoers
#添加如下行：
%wheel ALL=(ALL) ALL
{% endhighlight %}



设置这个用户的密码

{% highlight bash %}
passwd <你前面设置的用户名>
{% endhighlight %}



设置`root`用户的密码

{% highlight bash %}
passwd root
{% endhighlight %}



安装kde桌面环境以及其必要组件（建议装好桌面环境,配置好`grub`引导之后再看）

修改`locale.conf`

推荐方法

{% highlight bash %}
echo LANG=zh_CN.UTF-8 > /etc/locale.conf
{% endhighlight %}

或者

{% highlight bash %}
vim /etc/locale.conf
{% endhighlight%}

然后把`LANG=zh_CN.UTF-8`加入

## 5. 安装桌面环境（任选一个）

kde：

{% highlight bash %}
pacman -S xorg plasma kde-applications sddm pipewire-pulse pipewire-alsa pipewire-jack pavucontrol networkmanager
systemctl enable sddm
systemctl enable NetworkManager
{% endhighlight %}

gnome:

{% highlight bash%}
pacman -S xorg gnome gnome-extra gnome-tweak-tool gdm pipewire-pulse pipewire-alsa pipewire-jack pavucontrol networkmanager
systemctl enable gdm
systemctl enable NetworkManager
{% endhighlight %}

xfce:
{% highlight bash %}
pacman -S xorg xfce4 xfce4-goodies lightdm-gtk-greeter-settings pipewire-pulse pipewire-alsa pipewire-jack pavucontrol network-manager-applet
systemctl enable lightdm
systemctl enable NetworkManager
{% endhighlight %}

## 6. 配置`grub`

{% highlight bash %}
pacman -S grub efibootmgr os-prober dosfstools intel-ucode
grub-install --efi-directory=/efi

#然后vim /etc/default/grub，找到#GRUB_DISABLE_OS_PROBER=true
#取消注释并且把true改为false

grub-mkconfig -o /boot/grub/grub.cfg
{% endhighlight %}

**猫猫在这里提醒一句，`locale.conf`没配置的快去配置nya！**

## 7. 重启完成安装
{% highlight bash %}
exit  #<-退出arch-chroot
reboot
{% endhighlight %}


**猫猫恭喜你！你完成了`arch`的安装**

**本猫猫在这里提一句，在装`arch`和用`arch`的时候要看`archwiki`的说~如果猫猫在这篇文章中有什么错误请各位大佬指出！**

本文大量参考了`aya`大佬的文章，[点击此处可以看到原文章](https://note.aya1.top/#/Arch_For_Aya?id=%e5%88%86%e5%8c%ba%ef%bc%9acfdisk-devsda)

最后祝愿大家使用`arch`愉快！
